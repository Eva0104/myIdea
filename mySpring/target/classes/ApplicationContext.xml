<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="userDao" class="com.zhuxiaoxue.dao.UserDAO" lazy-init="true"/>


    <!--<bean id="userService" class="com.zhuxiaoxue.service.UserService">-->
        <!--<property name="userDAO" ref="userDao"/>-->
    <!--</bean>-->

    <!--
    取别名
    <alias name="userDao" alias="myDao"/>
    -->

    <!--
    name属性
    <bean name="userDao,myDao" class="com.zhuxiaoxue.dao.UserDAO"/>
    -->

    <!--
     init-method定义类中的初始化方法,destroy-method定义销毁方法
     <bean id="userDao" class="com.zhuxiaoxue.dao.UserDAO" init-method="init" destroy-method="destroy"/>
    -->

    <!--
    scope默认值为singleton (默认情况下，Spring容器中的管理的类将会变成单例类，类的对象会在容器启动的时候创建)
    如果修改为prototype,则每次调用getBean方法的时候会获取一个类的对对象，容器启动时将不会创建该类的对象
    <bean id="userDao" class="com.zhuxiaoxue.dao.UserDAO" scope="prototype"/>
    -->

    <!--
    lazy-init = true,表示在调用getBean的时候再去创建类的对象(称为类的延迟加载)
    <bean id="userDao" class="com.zhuxiaoxue.dao.UserDAO" lazy-init = "true"/>
    -->




</beans>